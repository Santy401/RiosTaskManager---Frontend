// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String?
  role      String?
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Company {
  id        String   @id @default(cuid())
  name      String   // NOMBRE
  tipo      String   // TIPO
  nit       String   // NIT
  cedula    String?  // CEDULA
  dian      String   // CLAVE DIAN (was claveDian, but keeping dian for compatibility)
  firma     String   // FIRMA ELEC (was firmaElec, but keeping firma for compatibility)
  softwareContable String? // SOFTWARE CONTABLE
  usuario   String   // USUARIO
  contraseña String  // CLAVE SOFTWARE (was claveSoftware, but keeping contraseña for compatibility)
  servidorCorreo String // Servidor de correo
  email     String   // E-MAIL
  claveCorreo String? // CLAVE CORREO
  claveCC   String?  // CLAVE CC
  claveSS   String?  // CLAVE SS
  claveICA  String?  // CLAVE ICA
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Area {
  id        String   @id @default(cuid())
  name      String
  tasks     Task[]
  state     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id        String   @id @default(cuid())
  name      String
  description String
  companyId String
  areaId    String
  userId    String
  dueDate   DateTime
  status    String
  company   Company  @relation(fields: [companyId], references: [id])
  area      Area     @relation(fields: [areaId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}